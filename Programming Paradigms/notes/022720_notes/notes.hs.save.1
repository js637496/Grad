type Shopitem = (String, Int)
type Basket = [Shopitem]

addCartItems :: Basket -> Int
addCartItems [] = 0
addCartItems ((item,price):xs) = price + addCartItems xs

type Map k v = [(k,v)]
m1 :: Map String Int
m1 = [("aa", 1), ("abx", 1)

m2 :: Map Char Double
m2 = [('a',5.7),('x',53.2)]

find :: k -> Map k v -> v
find k m = head[v | (k',v) <- m, k == k']

type Pos = (Int,Int)
data Move = North | South | East | West
